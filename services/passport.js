/**
 * Created by lcom64_one on 8/3/2017.
 */
const passport=require('passport');
const mongoose=require('mongoose');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const keys=require('../config/keys');

const User=mongoose.model('users');

//this function to serialize user with unique id
passport.serializeUser((user,done)=>{

  //this is the id which is auto generated by mongoDB for every record
  //it will check the existing user
  done(null,user.id);
});

passport.deserializeUser((id,done)=>{
User.findById(id).then(user=>{
  done(null,user);
});
});

//passport for handling all backend congiguration google oauth api
passport.use(
  new GoogleStrategy(
    {
      clientID: keys.googleClientID,
      clientSecret: keys.googleClientSecret,
      callbackURL: '/auth/google/callback'
    },
    (accessToken,refreshToken,profile,done) => {

        User.findOne({googleID:profile.id})
          .then((existingUser)=>{
            if(existingUser){
              //do nothing
              done(null,existingUser);

            }
            else{
              new User({googleID:profile.id})
                .save()
                .then(user=>done(null,user));
            }
          });
    }
  )
);
